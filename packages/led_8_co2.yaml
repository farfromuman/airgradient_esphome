# Sets the full LED bar to a color relative to CO2 levels
# Changed to accommodate 8 LEDs bar
# https://app.airgradient.com/dashboard/about

substitutions:
  co2_green: '400'
  co2_yellow: '1000'
  co2_red: '2000'
  co2_purple: '4000'

interval:
  - interval: 5s
    then:
      - if:
          condition:
            light.is_on: led_strip
          then:
            - if:
                condition:
                  lambda: 'return !(isnan(id(co2).state));' # Valid data returned
                then:
                  - light.addressable_set:
                      id: led_strip
                      color_brightness: !lambda 'return ((id(led_brightness).state - (id(led_fade).state * 3)) / 100.0);'
                      range_from: 0
                      range_to: 7
                      red: !lambda 'return (id(co2).state < $co2_green) ? 0 : (id(co2).state <= $co2_yellow) ? (id(co2).state - $co2_green) / ($co2_yellow - $co2_green) : 1;'
                      green: !lambda 'return (id(co2).state < $co2_yellow) ? 1 : (id(co2).state <= $co2_red) ? 1 - (id(co2).state - $co2_yellow) / ($co2_red - $co2_yellow) : 0;'
                      blue: !lambda 'return (id(co2).state < $co2_red) ? 0 : (id(co2).state <= $co2_purple) ? (id(co2).state - $co2_red) / ($co2_purple - $co2_red) : 1;'
                  - light.addressable_set:
                      id: led_strip
                      color_brightness: !lambda 'return ((id(led_brightness).state - (id(led_fade).state * 2)) / 100.0);'
                      range_from: 1
                      range_to: 6
                      red: !lambda 'return (id(co2).state < $co2_green) ? 0 : (id(co2).state <= $co2_yellow) ? (id(co2).state - $co2_green) / ($co2_yellow - $co2_green) : 1;'
                      green: !lambda 'return (id(co2).state < $co2_yellow) ? 1 : (id(co2).state <= $co2_red) ? 1 - (id(co2).state - $co2_yellow) / ($co2_red - $co2_yellow) : 0;'
                      blue: !lambda 'return (id(co2).state < $co2_red) ? 0 : (id(co2).state <= $co2_purple) ? (id(co2).state - $co2_red) / ($co2_purple - $co2_red) : 1;'
                  - light.addressable_set:
                      id: led_strip
                      color_brightness: !lambda 'return ((id(led_brightness).state - (id(led_fade).state)) / 100.0);'
                      range_from: 2
                      range_to: 5
                      red: !lambda 'return (id(co2).state < $co2_green) ? 0 : (id(co2).state <= $co2_yellow) ? (id(co2).state - $co2_green) / ($co2_yellow - $co2_green) : 1;'
                      green: !lambda 'return (id(co2).state < $co2_yellow) ? 1 : (id(co2).state <= $co2_red) ? 1 - (id(co2).state - $co2_yellow) / ($co2_red - $co2_yellow) : 0;'
                      blue: !lambda 'return (id(co2).state < $co2_red) ? 0 : (id(co2).state <= $co2_purple) ? (id(co2).state - $co2_red) / ($co2_purple - $co2_red) : 1;'
                  - light.addressable_set:
                      id: led_strip
                      color_brightness: !lambda 'return id(led_brightness).state / 100.0;'
                      range_from: 3
                      range_to: 4
                      red: !lambda 'return (id(co2).state < $co2_green) ? 0 : (id(co2).state <= $co2_yellow) ? (id(co2).state - $co2_green) / ($co2_yellow - $co2_green) : 1;'
                      green: !lambda 'return (id(co2).state < $co2_yellow) ? 1 : (id(co2).state <= $co2_red) ? 1 - (id(co2).state - $co2_yellow) / ($co2_red - $co2_yellow) : 0;'
                      blue: !lambda 'return (id(co2).state < $co2_red) ? 0 : (id(co2).state <= $co2_purple) ? (id(co2).state - $co2_red) / ($co2_purple - $co2_red) : 1;'
            - if:
                condition:
                  lambda: 'return (isnan(id(co2).state));'  # No data from sensor yet
                then:
                  - light.addressable_set:
                      id: led_strip
                      color_brightness: !lambda 'return id(led_brightness).state / 100.0;'
                      range_from: 0
                      range_to: 7
                      red: 0%
                      green: 0%
                      blue: 0%
